<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>–≠–∫–∑–∞–º–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Äî –æ–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</title>

  <!-- –®—Ä–∏—Ñ—Ç—ã -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

  <!-- –û–±—â–∏–π —Å—Ç–∏–ª—å –ø—Ä–æ–µ–∫—Ç–∞ -->
  <link rel="stylesheet" href="./style_common.css" />

  <!-- –ê–Ω—Ç–∏-–º–∏–≥–∞–Ω–∏–µ —Ç–µ–º—ã -->
  <script>
    (function(){ try{
      const saved = localStorage.getItem('pref-theme') || 'light';
      if (saved === 'dark') document.documentElement.classList.add('dark');
    }catch{}})();
  </script>

  <style>
    .wrap{ max-width:1400px; margin:0 auto; padding:20px; }
    h1{ color:var(--primary); font-size:34px; margin:12px 0 22px; text-align:center; }

    .block{
      background:var(--card); border-left:5px solid var(--primary);
      border-radius:12px; box-shadow:var(--shadow); padding:18px 24px; margin-bottom:26px;
    }
    .block h2{ margin:0 0 8px; font-size:22px; }
    .desc{ font-size:14px; color:var(--muted); margin:0 0 10px; }

    audio{ margin:10px 0 8px; width:100%; display:block; }
    .wave-wrap{ width:100%; margin:0 auto 10px; display:none; }
    .wave{ width:100%; height:56px; display:block; background:#e9edf7; border-radius:10px; box-shadow:var(--shadow); }
    .dark .wave{ background:#1f2a3d; }

    :root{
      --wave-base: rgba(0,0,0,.28);
      --wave-prog: var(--primary);
      --wave-glow: rgba(43,108,255,.45);
    }
    html.dark{
      --wave-base: rgba(255,255,255,.52);
      --wave-prog: #5bb8ff;
      --wave-glow: rgba(91,184,255,.65);
    }

    .status{ font-size:14px; color:var(--muted); margin-bottom:4px; }

    /* –°–Ω–∏–ø–ø–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: –±–∞–∑–æ–≤—ã–π –∏ ¬´—á–∏—Å—Ç—ã–π¬ª –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ –ø—É–Ω–∫—Ç–∏—Ä–∞ */
    .task-snippet{
      margin-top:12px; padding:14px 16px; border:1px dashed var(--border);
      border-radius:12px; background:var(--card);
    }
    .task-snippet--plain{ border:none; padding:0; background:transparent; }

    .snippet-images{ display:flex; gap:14px; flex-wrap:wrap; margin-top:8px; }
    .snippet-images img{ max-width:100%; width:calc(50% - 7px); border-radius:10px; box-shadow:var(--shadow); }

    /* === Task 1: —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –≤ –µ–≥–æ result === */
    .reading-box{
      background:var(--card);
      border:1px solid #ccc;
      border-radius:12px;
      box-shadow:var(--shadow);
      padding:24px 28px;
      text-align:left;
      font-family: Inter, system-ui, Segoe UI, Roboto, Arial, sans-serif;
      font-size:25px;
      line-height:1.7;
      max-width:1200px;
      margin:0 auto 24px;
      white-space:pre-line;
    }
    @media (max-width:900px){
      .reading-box{ font-size:18px; padding:18px 16px; max-width:100%; }
    }

    /* ===== Task 2: –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞–∫ –≤ result Task 2 (–ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã) ===== */
    .t2-layout{
      display:grid;
      grid-template-columns: 1.05fr 0.95fr;
      gap:28px 36px;
      align-items:start;
      max-width:1500px;
      margin:18px auto 0;
    }
    .t2-header{
      background:var(--card);
      border-left:5px solid var(--primary);
      box-shadow:var(--shadow);
      border-radius:12px;
      padding:20px 24px;
      grid-column:1 / -1;
      text-align:center;
      font-size:20px; line-height:1.7;
    }
    .t2-left{ font-size:22px; line-height:1.55; text-align:left; }
    .t2-list{ list-style:none; margin:0 0 24px 0; padding:0; }
    .t2-list li{ margin:10px 0; }
    .t2-title{ font-weight:800; font-size:30px; margin:6px 0 12px; text-align:center; }
    .t2-figure{ width:100%; aspect-ratio:3/2; border-radius:12px; overflow:hidden; box-shadow:var(--shadow); background:#ddd; }
    .t2-figure>img{ width:100%; height:100%; object-fit:cover; object-position:center; display:block; }
    @media (max-width:1100px){
      .t2-layout{ grid-template-columns:1fr; gap:22px; }
    }

    .navs{ text-align:center; margin-top:22px; display:flex; gap:10px; justify-content:center; flex-wrap:wrap; }
    .btn{
      display:inline-block; padding:12px 18px; font-weight:600; color:#fff;
      background:linear-gradient(135deg, var(--primary), var(--primary-600));
      border:none; border-radius:10px; box-shadow:0 10px 22px rgba(43,108,255,.3);
      cursor:pointer; text-decoration:none;
    }
  </style>
</head>
<body>
  <button id="themeBtn" class="theme-toggle" aria-label="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É">üåì –¢–µ–º–∞</button>

  <div class="wrap">
    <h1>–≠–∫–∑–∞–º–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é ‚Äî –æ–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</h1>

    <!-- Task 1 -->
    <section class="block" id="t1">
      <h2>Task 1 ‚Äî Reading the text aloud</h2>
      <p class="desc">–í—ã –ø—Ä–æ—á–∏—Ç–∞–ª–∏ —Ç–µ–∫—Å—Ç –≤—Å–ª—É—Ö (–¥–æ 1.5 –º–∏–Ω—É—Ç—ã).</p>
      <div class="status" id="s1">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–∏‚Ä¶</div>
      <audio id="a1" controls></audio>
      <div class="wave-wrap"><canvas id="w1" class="wave"></canvas></div>
      <div class="task-snippet task-snippet--plain" id="snip1">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞‚Ä¶</div>
    </section>

    <!-- Task 2 -->
    <section class="block" id="t2">
      <h2>Task 2 ‚Äî Questions to advertisement</h2>
      <p class="desc">–í—ã –∑–∞–¥–∞–ª–∏ 4 –≤–æ–ø—Ä–æ—Å–∞ –ø–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—é (–ø–æ 20 —Å–µ–∫ –Ω–∞ –æ—Ç–≤–µ—Ç).</p>
      <div class="status" id="s2">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–∏‚Ä¶</div>
      <audio id="a2" controls></audio>
      <div class="wave-wrap"><canvas id="w2" class="wave"></canvas></div>
      <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä, –≤ –∫–æ—Ç–æ—Ä—ã–π –º–æ–Ω—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π layout result Task 2 -->
      <div class="task-snippet" id="snip2">
        <h3>–û–±—ä—è–≤–ª–µ–Ω–∏–µ</h3>
        <div class="snippet-images"><img id="snip2Img" alt="Advertisement" onerror="this.style.display='none'"></div>
      </div>
    </section>

    <!-- Task 3 -->
    <section class="block" id="t3">
      <h2>Task 3 ‚Äî Interview</h2>
      <p class="desc">–î–∏–∞–ª–æ–≥-–∏–Ω—Ç–µ—Ä–≤—å—é –∏–∑ 5 –≤–æ–ø—Ä–æ—Å–æ–≤ (40 —Å–µ–∫ –Ω–∞ –æ—Ç–≤–µ—Ç).</p>
      <div class="status" id="s3">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–∏‚Ä¶</div>
      <audio id="a3" controls></audio>
      <div class="wave-wrap"><canvas id="w3" class="wave"></canvas></div>
      <div class="task-snippet task-snippet--plain" id="snip3">–ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤‚Ä¶</div>
    </section>

    <!-- Task 4 -->
    <section class="block" id="t4">
      <h2>Task 4 ‚Äî Monologue (project)</h2>
      <p class="desc">–ú–æ–Ω–æ–ª–æ–≥ –ø–æ –ø—Ä–æ–µ–∫—Ç—É (–¥–æ 3 –º–∏–Ω—É—Ç, 12‚Äì15 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π).</p>
      <div class="status" id="s4">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–∏‚Ä¶</div>
      <audio id="a4" controls></audio>
      <div class="wave-wrap"><canvas id="w4" class="wave"></canvas></div>

      <div class="task-snippet" id="snip4">
        <h3>–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h3>
        <div class="snippet-images" aria-label="Project illustrations (Task 4)">
          <img id="img1" alt="Photo 1" onerror="this.style.display='none'">
          <img id="img2" alt="Photo 2" onerror="this.style.display='none'">
        </div>
        <div id="snip4Box" style="margin-top:10px;">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏‚Ä¶</div>
      </div>
    </section>

    <div class="navs">
      <a id="repeatExam" class="btn" href="#" role="button">üîÅ –ü—Ä–æ–π—Ç–∏ —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–Ω–æ–≤–æ</a>
      <a class="btn" href="./exams.html" role="button">‚Üê –ö –≤—ã–±–æ—Ä—É –≤–∞—Ä–∏–∞–Ω—Ç–∞</a>
      <a class="btn" href="./ege_menu.html" role="button">‚Üê –ö –≤—ã–±–æ—Ä—É —Ñ–æ—Ä–º–∞—Ç–∞</a>
      <a class="btn" href="../index.html" role="button">‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é</a>
    </div>
  </div>

  <script type="module">
    import { toggleThemeInit, navigateOnce } from './common.js';
    toggleThemeInit();

    const q = new URLSearchParams(location.search);
    const variant = q.get('variant') || sessionStorage.getItem('exam_variant') || '1';

    /* -------------------- –ê–£–î–ò–û + –í–û–õ–ù–ê -------------------- */
    const rows = [
      { key:'ege1', a:'a1', s:'s1', w:'w1' },
      { key:'ege2', a:'a2', s:'s2', w:'w2' },
      { key:'ege3', a:'a3', s:'s3', w:'w3' },
      { key:'ege4', a:'a4', s:'s4', w:'w4' },
    ];

    function dataURLtoBlob(dataURL){
      const parts = (dataURL || '').split(',');
      if (parts.length < 2) return null;
      const header = parts[0], b64 = parts[1];
      const type = (header.match(/data:(.*?);base64/) || [,'application/octet-stream'])[1];
      const bin  = atob(b64);
      const bytes= new Uint8Array(bin.length);
      for (let i=0;i<bin.length;i++) bytes[i] = bin.charCodeAt(i);
      return new Blob([bytes], { type });
    }

    async function renderWave(audioEl, canvas, arrayBuffer){
      const AC   = window.AudioContext || window.webkitAudioContext;
      const ctxA = new AC();
      const buf  = await ctxA.decodeAudioData(arrayBuffer);

      const waveWrap = canvas.parentElement;
      waveWrap.style.display = 'block';

      const width = 1000;
      const peaks = (()=>{ 
        const ch0 = buf.getChannelData(0);
        const ch1 = buf.numberOfChannels>1 ? buf.getChannelData(1) : null;
        const total = ch0.length;
        const block = Math.floor(total / width) || 1;
        const out = new Array(width);
        for (let i=0;i<width;i++){
          const s = i*block, e = Math.min(total, s+block);
          let min=1, max=-1;
          for (let j=s;j<e;j++){
            const v = ch1 ? (ch0[j]+ch1[j])*0.5 : ch0[j];
            if (v<min) min=v; if (v>max) max=v;
          }
          out[i] = [min,max];
        }
        return out;
      })();

      function draw(progress){
        const dpr = Math.max(1, Math.floor(window.devicePixelRatio || 1));
        const cssW = canvas.clientWidth || 600;
        const cssH = canvas.clientHeight || 56;
        if (canvas.width !== cssW*dpr) canvas.width = cssW*dpr;
        if (canvas.height!== cssH*dpr) canvas.height= cssH*dpr;
        const ctx = canvas.getContext('2d');
        ctx.setTransform(dpr,0,0,dpr,0,0);

        const rs = getComputedStyle(document.documentElement);
        const base = (rs.getPropertyValue('--wave-base') || 'rgba(0,0,0,.28)').trim();
        const prog = (rs.getPropertyValue('--wave-prog') || '#2b6cff').trim();
        const glow = (rs.getPropertyValue('--wave-glow') || 'rgba(43,108,255,.45)').trim();
        const bg   = getComputedStyle(canvas).backgroundColor;

        ctx.clearRect(0,0,cssW,cssH);
        ctx.fillStyle = bg; ctx.fillRect(0,0,cssW,cssH);

        const mid = cssH/2;
        ctx.fillStyle = base;
        for (let i=0;i<peaks.length;i++){
          const x = i/peaks.length*cssW;
          const [min,max] = peaks[i];
          const hTop = Math.abs(max)*mid, hBot = Math.abs(min)*mid;
          ctx.fillRect(x, mid-hTop, 1, hTop+hBot || 1);
        }

        const progW = Math.max(0, Math.min(cssW, progress*cssW));
        ctx.save(); ctx.beginPath(); ctx.rect(0,0,progW,cssH); ctx.clip();
        ctx.fillStyle = prog; ctx.shadowColor = glow; ctx.shadowBlur = 8;
        for (let i=0;i<peaks.length;i++){
          const x = i/peaks.length*cssW;
          const [min,max] = peaks[i];
          const hTop = Math.abs(max)*mid, hBot = Math.abs(min)*mid;
          ctx.fillRect(x, mid-hTop, 1, hTop+hBot || 1);
        }
        ctx.restore();
      }

      let raf;
      const tick = ()=>{
        const dur = buf.duration || (audioEl.duration || 1);
        const p = Math.min(1, (audioEl.currentTime || 0) / dur);
        draw(p);
        raf = requestAnimationFrame(tick);
      };
      audioEl.addEventListener('play', ()=>{ cancelAnimationFrame(raf); tick(); });
      audioEl.addEventListener('pause', ()=>{ cancelAnimationFrame(raf); draw((audioEl.currentTime||0)/(buf.duration||1)); });
      audioEl.addEventListener('ended', ()=>{ cancelAnimationFrame(raf); draw(1); });

      canvas.addEventListener('pointerdown', (e)=>{
        const r = canvas.getBoundingClientRect();
        const x = Math.max(0, Math.min(1, (e.clientX - r.left)/r.width));
        audioEl.currentTime = x * (buf.duration || audioEl.duration || 0);
        draw(x);
      }, {passive:true});

      draw(0);
    }

    async function setupRow(row){
      const base64 = sessionStorage.getItem(`${row.key}_audio_base64`);
      const mime   = (sessionStorage.getItem(`${row.key}_audio_mime`) || 'audio/webm').toLowerCase();

      const a = document.getElementById(row.a);
      const s = document.getElementById(row.s);
      const w = document.getElementById(row.w);

      if (!base64){
        s.textContent = '‚ö†Ô∏è –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.';
        return;
      }
      try{
        const blob = dataURLtoBlob(base64);
        if (blob){
          const objectURL = URL.createObjectURL(blob);
          a.src  = objectURL;
          a.type = blob.type || mime;
          const buf = await blob.arrayBuffer();
          await renderWave(a, w, buf);
          window.addEventListener('beforeunload', ()=>{ URL.revokeObjectURL(objectURL); }, { once:true });
        }else{
          a.src  = base64;
          a.type = mime;
          const resp = await fetch(base64);
          await renderWave(a, w, await resp.arrayBuffer());
        }
        s.textContent = '–ì–æ—Ç–æ–≤–æ.';
      }catch{
        a.src  = base64;
        a.type = mime;
        s.textContent = '–ì–æ—Ç–æ–≤–æ (–±–µ–∑ –≤–æ–ª–Ω—ã).';
      }
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ 4 –¥–æ—Ä–æ–∂–∫–∏
    rows.reduce((p,row)=> p.then(()=>setupRow(row)), Promise.resolve());

    /* -------------------- –ü–û–î–¢–Ø–ì–ò–í–ê–ï–ú –ö–û–ù–¢–ï–ù–¢ –ó–ê–î–ê–ù–ò–ô -------------------- */
    const domParse = (html, baseUrl='.')=>{
      const parser = new DOMParser();
      const doc = parser.parseFromString(html, 'text/html');
      // —Ñ–∏–∫—Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—É—Ç–µ–π
      doc.querySelectorAll('[src]').forEach(el=>{
        const src = el.getAttribute('src');
        if (src && !/^([a-z]+:|\/)/i.test(src)){
          el.setAttribute('src', (baseUrl + '/' + src).replace(/\/{2,}/g,'/').replace(':/','://'));
        }
      });
      return doc;
    };

    // Task 1: –≤—Å—Ç–∞–≤–ª—è–µ–º —Ü–µ–ª—É—é .reading-box –∏–∑ ege1_varN_4_result.html
    (async ()=>{
      try{
        const url  = `./task1/variants/variant${variant}/ege1_var${variant}_4_result.html`;
        const html = await (await fetch(url, {cache:'no-store'})).text();
        const doc  = domParse(html, `./task1/variants/variant${variant}`);
        const rb   = doc.querySelector('.reading-box');
        const mount= document.getElementById('snip1');
        if (rb && mount){
          mount.innerHTML = '';
          mount.appendChild(rb.cloneNode(true));
        }else if(mount){ mount.textContent = '‚Äî'; }
      }catch{
        const mount = document.getElementById('snip1');
        if (mount) mount.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—Å—Ç.';
      }
    })();

    // Task 2: –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –í–ï–°–¨ –±–ª–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ result 2
    (async ()=>{
      const mount = document.getElementById('snip2');
      try{
        const url  = `./task2/variants/variant${variant}/ege2_var${variant}_4_result.html`;
        const html = await (await fetch(url, {cache:'no-store'})).text();
        const doc  = domParse(html, `./task2/variants/variant${variant}`);

        const ad = doc.querySelector('.ad-layout');
        if (ad){
          const clone = ad.cloneNode(true);

          // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –∫–ª–∞—Å—Å—ã –ø–æ–¥ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
          clone.classList.remove('ad-layout');
          clone.classList.add('t2-layout');

          const header = clone.querySelector('.task-header');
          if (header){
            header.classList.remove('task-header','card');
            header.classList.add('t2-header');
          }
          const left = clone.querySelector('.left-free');
          if (left){
            left.classList.remove('left-free');
            left.classList.add('t2-left');
          }
          const list = clone.querySelector('.plain-list');
          if (list){
            list.classList.remove('plain-list');
            list.classList.add('t2-list');
          }
          const title = clone.querySelector('.ad-title');
          if (title){
            title.classList.remove('ad-title');
            title.classList.add('t2-title');
          }
          const figure = clone.querySelector('.ad-figure');
          if (figure){
            figure.classList.remove('ad-figure');
            figure.classList.add('t2-figure');
          }

          mount.innerHTML = '';
          mount.appendChild(clone);
          return;
        }

        // –§–æ–ª–±—ç–∫: —Ç–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∏–∑ task-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const taskUrl  = `./task2/variants/variant${variant}/ege2_var${variant}_3_task.html`;
        const taskHtml = await (await fetch(taskUrl, {cache:'no-store'})).text();
        const taskDoc  = domParse(taskHtml, `./task2/variants/variant${variant}`);
        const img      = taskDoc.querySelector('.ad-figure img');
        if (img){
          mount.querySelector('#snip2Img').src = img.getAttribute('src');
          mount.querySelector('#snip2Img').alt = img.getAttribute('alt') || 'Advertisement';
        }else{
          mount.style.display = 'none';
        }
      }catch{
        mount.style.display = 'none';
      }
    })();

    // Task 3: –≤—Å—Ç–∞–≤–ª—è–µ–º —Ü–µ–ª—É—é .task-container –∏–∑ ege3_varN_4_result.html
    (async ()=>{
      try{
        const url  = `./task3/variants/variant${variant}/ege3_var${variant}_4_result.html`;
        const html = await (await fetch(url, {cache:'no-store'})).text();
        const doc  = domParse(html, `./task3/variants/variant${variant}`);
        const tc   = doc.querySelector('.task-container');
        const mount= document.getElementById('snip3');
        if (tc && mount){
          mount.innerHTML = '';
          mount.appendChild(tc.cloneNode(true));
        }else if(mount){ mount.textContent = '‚Äî'; }
      }catch{
        const mount = document.getElementById('snip3');
        if (mount) mount.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã.';
      }
    })();

    // Task 4: –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (.task-container) + —Ñ–æ—Ç–æ
    (async ()=>{
      try{
        const url  = `./task4/variants/variant${variant}/ege4_var${variant}_3_task.html`;
        const html = await (await fetch(url, {cache:'no-store'})).text();
        const doc  = domParse(html, `./task4/variants/variant${variant}`);
        const instr= doc.querySelector('.task-container');
        const target = document.getElementById('snip4Box');
        if (instr){ target.innerHTML = instr.innerHTML; }
        else{ target.textContent = '‚Äî'; }
      }catch{
        document.getElementById('snip4Box').textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.';
      }

      // –§–æ—Ç–æ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞
      const img1 = document.getElementById('img1');
      const img2 = document.getElementById('img2');
      img1.src = `./task4/variants/variant${variant}/photo1_city.png`;
      img2.src = `./task4/variants/variant${variant}/photo2_countryside.png`;
    })();

    /* -------------------- –ù–ò–ñ–ù–ò–ï –ö–ù–û–ü–ö–ò -------------------- */
    document.getElementById('repeatExam').addEventListener('click',(e)=>{
      e.preventDefault();
      try{
        ['ege1_','ege2_','ege3_','ege4_'].forEach(prefix=>{
          Object.keys(sessionStorage).forEach(k=>{ if(k.startsWith(prefix)) sessionStorage.removeItem(k); });
        });
      }catch{}
      const v = sessionStorage.getItem('exam_variant') || variant;
      navigateOnce(`./task1/variants/variant${v}/ege1_var${v}_1_prepare.html`);
    });

    window.addEventListener('pageshow', ()=>{ navigateOnce.lock = false; });
  </script>
</body>
</html>
